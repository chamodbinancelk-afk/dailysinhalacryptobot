// index.js

// --- A. CONFIGURATION (config.js) ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑É‡∑ä‡∂Æ‡∑í‡∂ª ‡∂Ö‡∂ú‡∂∫‡∂±‡∑ä Import ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ---
// ‡∂∏‡∑ô‡∑Ñ‡∑í‡∂Ø‡∑ì CONFIG, PERMISSIONS ‡∑Ä‡∑ê‡∂±‡∑í ‡∑É‡∑ä‡∂Æ‡∑í‡∂ª ‡∂Ö‡∂ú‡∂∫‡∂±‡∑ä ‡∂Ω‡∑ê‡∂∂‡∑ö.
import { CONFIG, PERMISSIONS } from './config.js'; 

// --- B. TELEGRAM ‡∑É‡∑Ñ C. GROUP_MANAGEMENT ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ Utilities Import ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ---
// sendUnifiedMessage: Telegram API calls ‡∑É‡∂≥‡∑Ñ‡∑è.
// getApprovedGroupsMap: Group Permissions ‡∂ö‡∑í‡∂∫‡∑Ä‡∑ì‡∂∏‡∂ß.
// checkAndIncrementUsage: Rate Limiting ‡∑É‡∂≥‡∑Ñ‡∑è.
import { sendUnifiedMessage } from './telegram.js'; 
import { getApprovedGroupsMap, checkAndIncrementUsage } from './group_management.js'; 

// --- D. AI_SERVICES ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ AI Functions Import ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ---
// generateScheduledContent: ‡∂Ø‡∑õ‡∂±‡∑í‡∂ö Post ‡∂ë‡∂ö ‡∑É‡∑ê‡∂ö‡∑É‡∑ì‡∂∏‡∂ß.
import { generateScheduledContent } from './ai_services.js'; 

// --- E. MAIN_LOGIC ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± Handlers Import ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ---
// fetchForexNews: News Scraping ‡∑É‡∑Ñ Posting ‡∑É‡∂≥‡∑Ñ‡∑è.
// handleWebhook: ‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ Message/Command/Group Add/Reply/Search logic ‡∑É‡∂≥‡∑Ñ‡∑è.
// handleCallbackQuery: Inline Button presses ‡∑É‡∂≥‡∑Ñ‡∑è.
// sendOwnerPanel: Admin Panel ‡∂ë‡∂ö Update ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß.
import { 
    fetchForexNews, 
    handleWebhook, 
    handleCallbackQuery, // handleWebhook ‡∂≠‡∑î‡∑Ö ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠ ‡∑Ä‡∑ö 
    sendOwnerPanel
} from './main_logic.js'; 

// üõë ‡∑Ä‡∑ê‡∂Ø‡∂ú‡∂≠‡∑ä: Worker ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂Ö‡∂±‡∑í‡∑Ä‡∑è‡∂ª‡∑ä‡∂∫‡∂∫‡∑ô‡∂±‡∑ä‡∂∏ ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ES Module Export ‡∂ë‡∂ö.

/**
 * Cloudflare Worker ‡∑Ñ‡∑í ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± Handlers ‡∂±‡∑í‡∂ª‡∑è‡∑Ä‡∂ª‡∂´‡∂∫ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏.
 */
export default {
    
    /**
     * 1. ‚è∞ Scheduled Handler (Cron Trigger)
     * GitHub Actions ‡∂∏‡∂ü‡∑í‡∂±‡∑ä Deploy ‡∂ö‡∑Ö ‡∂¥‡∑É‡∑î Cloudflare Workers Cron Trigger ‡∂∏‡∂ü‡∑í‡∂±‡∑ä ‡∂ö‡∑ê‡∂≥‡∑Ä‡∂±‡∑î ‡∂Ω‡∑ê‡∂∂‡∑ö.
     */
    async scheduled(event, env, ctx) {
        // ctx.waitUntil ‡∂∏‡∂ü‡∑í‡∂±‡∑ä Worker ‡∂ë‡∂ö Time-out ‡∑Ä‡∑ì‡∂∏ ‡∑Ä‡∑Ö‡∂ö‡∑ä‡∑Ä‡∂∫‡∑í.
        ctx.waitUntil(
            (async () => {
                console.log("Starting Scheduled Tasks (Cron Job)...");
                
                // Note: env ‡∑Ä‡∑É‡∑ä‡∂≠‡∑î‡∑Ä (KV bindings) ‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ imported functions ‡∑Ä‡∂Ω‡∂ß ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ì‡∂∏‡∂ß 
                // ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂±‡∂∏‡∑ä, ‡∂ë‡∂∏ functions ‡∑Ä‡∂Ω‡∂ß 'env' parameter ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ë‡∂ö‡∂≠‡∑î ‡∂ö‡∑Ö ‡∂∫‡∑î‡∂≠‡∑î‡∂∫. 
                
                // 1. News Post ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ (main_logic.js ‡∂∏‡∂ü‡∑í‡∂±‡∑ä)
                await fetchForexNews(env, false); 
                
                // 2. Educational Post Generate ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∑É‡∑Ñ Approved Groups ‡∑Ä‡∂Ω‡∂ß ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏.
                const postContent = await generateScheduledContent(env); 
                if (postContent) {
                    const groups = await getApprovedGroupsMap(env);
                    for (const chatId in groups) {
                        if (groups[chatId].permissions.includes(PERMISSIONS.DAILY_POST.id)) {
                            // sendUnifiedMessage (telegram.js) ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠ ‡∂ö‡∂ª‡∂∏‡∑í‡∂±‡∑ä ‡∂∫‡∑Ä‡∂∫‡∑í.
                            await sendUnifiedMessage(chatId, postContent, 'Markdown', null); 
                        }
                    }
                }
                
                // 3. Owner Panel ‡∂ë‡∂ö Update ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ (main_logic.js ‡∂∏‡∂ü‡∑í‡∂±‡∑ä)
                await sendOwnerPanel(env); 

                console.log("Scheduled tasks finished.");
            })()
        );
    },

    /**
     * 2. üåê Fetch Handler (Webhook / HTTP Requests)
     */
    async fetch(request, env, ctx) {
        const url = new URL(request.url);
        
        // Manual Trigger/Status Check
        if (url.pathname === '/status' || url.pathname === '/trigger-manual') {
             if (url.pathname === '/trigger-manual') {
                try {
                     // Scheduled logic ‡∂ë‡∂ö‡∂∏ Manual Trigger ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß.
                     await this.scheduled(null, env, ctx); 
                     return new Response('‚úÖ Manual Triggered Successfully.', { status: 200 });
                } catch (e) {
                    return new Response(`Error in Manual Trigger: ${e.message}`, { status: 500 });
                }
             }
             return new Response('Unified Trading Bot Worker V9 is Active.', { status: 200 });
        }
        
        // Telegram Webhook Requests (POST)
        if (request.method === 'POST') {
            // handleWebhook ‡∑Å‡∑ä‚Äç‡∂ª‡∑í‡∂≠‡∂∫ (main_logic.js) ‡∂∏‡∂ü‡∑í‡∂±‡∑ä ‡∑É‡∑í‡∂∫‡∂Ω‡∑î‡∂∏ incoming updates ‡∑Ñ‡∑É‡∑î‡∂ª‡∑î‡∑Ä‡∂∫‡∑í.
            return handleWebhook(request, env);
        }
        
        return new Response('404 Not Found', { status: 404 });
    }
};
