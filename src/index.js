// =================================================================
// === src/index.js (FINAL UNIFIED FIX) ===
// =================================================================

// --- 0. CONFIGURATION (Keys ‡∑É‡∑Ñ IDs ‡∑É‡∑ò‡∂¢‡∑î‡∑Ä‡∂∏ ‡∂ö‡∑ö‡∂≠‡∂∫‡∑ö) ---
// ‚ö†Ô∏è ‡∂î‡∂∂‡∂ú‡∑ö ‡∑É‡∑ê‡∂∂‡∑ë ‡∂Ö‡∂ú‡∂∫‡∂±‡∑ä ‡∑É‡∂∏‡∂ü ‡∂∫‡∑è‡∑Ä‡∂≠‡∑ä‡∂ö‡∑è‡∂Ω‡∑ì‡∂± ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‚ö†Ô∏è

const CONFIG = {
    // üõë ‡∂î‡∂∂‡∑ö Bot Token ‡∂ë‡∂ö
    TELEGRAM_BOT_TOKEN: "5100305269:AAEHxCE1z9jCFZl4b0-yoRfVfojKBRKSL0Q", 
    
    // üõë ‡∂î‡∂∂‡∑ö Channel/Group Chat ID ‡∂ë‡∂ö (Lifetime Post ‡∂ë‡∂ö ‡∂∫‡∑ê‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î ‡∑É‡∑ä‡∂Æ‡∑è‡∂±‡∂∫)
    TELEGRAM_CHAT_ID: "-1002947156921", // ‡∂î‡∂∂ ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑î‡∂±‡∑ä Channel ID ‡∂ë‡∂ö
    
    // üõë ‡∂î‡∂∂‡∑ö ‡∂¥‡∑î‡∂Ø‡∑ä‡∂ú‡∂Ω‡∑í‡∂ö Chat ID ‡∂ë‡∂ö (Owner ‡∂ú‡∑ö Private ID ‡∂ë‡∂ö - String ‡∂Ω‡∑ô‡∑É ‡∂≠‡∂∂‡∂±‡∑ä‡∂±)
    OWNER_CHAT_ID: "1901997764", // ‡∂î‡∂∂‡∑ö Owner ID ‡∂ë‡∂ö ‡∂∏‡∑ô‡∂∫ ‡∂±‡∑ú‡∑Ä‡∑ö ‡∂±‡∂∏‡∑ä ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
    
    // üõë ‡∂î‡∂∂‡∑ö ‡∂Ö‡∂Ω‡∑î‡∂≠‡∑ä‡∂∏ Gemini API Key ‡∂ë‡∂ö
    GEMINI_API_KEY: "AIzaSyDXf3cIysV1nsyX4vuNrBrhi2WCxV44pwA", 
    
    // Telegram API Endpoint Base URL ‡∂ë‡∂ö (Token ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä ‡∑É‡∑ë‡∂Ø‡∑ì ‡∂á‡∂≠)
    TELEGRAM_API_BASE: `https://api.telegram.org/bot5100305269:AAEHxCE1z9jCFZl4b0-yoRfVfojKBRKSL0Q`,
    
    // ‡∂Ø‡∑í‡∂±‡∂ö‡∂ß ‡∂ã‡∂¥‡∂ª‡∑í‡∂∏ ‡∂Ö‡∑Ä‡∑É‡∂ª ‡∂Ω‡∂≠‡∑ä ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫
    DAILY_LIMIT: 5
};

// --- 1. IMPORT HANDLERS ---
import { handleTradingWebhook, handleTradingScheduled } from './trading-logic';
import { handleNewsWebhook, handleNewsScheduled } from './news-logic';

// --- 2. WORKER EXPORT (MAIN ENTRY POINT) ---
export default {
    async scheduled(event, env, ctx) {
        // News ‡∑É‡∑Ñ Trading Logic ‡∂Ø‡∑ô‡∂ö‡∂∏ ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∂ö‡∂ª‡∂∫‡∑í
        
        try {
            // Trading Post ‡∂ë‡∂ö (AI Educational Post)
            ctx.waitUntil(handleTradingScheduled(event, env, ctx, CONFIG));
            
            // News Post ‡∂ë‡∂ö (Forex Fundamental News)
            ctx.waitUntil(handleNewsScheduled(event, env, ctx, CONFIG)); 

        } catch (e) {
            console.error("Error in scheduled handler:", e);
        }
    },

    async fetch(request, env, ctx) {
        if (request.method !== 'POST') {
            const url = new URL(request.url);
            
            // Manual Daily Post Trigger for Testing (Trading Post)
            if (url.pathname === '/trigger-trading-manual') {
                try {
                     const result = await handleTradingScheduled({type: 'manual'}, env, ctx, CONFIG);
                     if (result && result.status === 200) {
                        return new Response('‚úÖ Manual Trading Post Triggered Successfully.', { status: 200 });
                     }
                     return new Response(`‚ùå Manual Trading Post Failed: ${result?.content || 'Unknown Error'}`, { status: 500 });
                } catch (e) {
                     return new Response(`Error in Manual Trading Trigger: ${e.message}`, { status: 500 });
                }
            }

            // Manual Daily Post Trigger for Testing (News Post)
            if (url.pathname === '/trigger-news-manual') {
                try {
                     await handleNewsScheduled({type: 'manual'}, env, ctx, CONFIG);
                     return new Response('‚úÖ Manual News Post Triggered Successfully. (Check Channel)', { status: 200 });
                } catch (e) {
                     return new Response(`Error in Manual News Trigger: ${e.message}`, { status: 500 });
                }
            }

            return new Response('Worker running. Set up Telegram webhook to POST here.', { status: 200 });
        }
        
        // --- 3. INCOMING TELEGRAM WEBHOOK (POST REQUEST) ---
        try {
            const update = await request.json();
            
            // --- 3.1. News Bot Handler (Membership check and /fundamental, /start, /help) ---
            // news-logic ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä message ‡∂ë‡∂ö‡∂ö‡∑ä handle ‡∂ö‡∑Ö‡∑ö ‡∂±‡∂∏‡∑ä, response ‡∂ë‡∂ö ‡∂Ω‡∑ê‡∂∂‡∑ô‡∂±‡∑î ‡∂á‡∂≠.
            const newsResponse = await handleNewsWebhook(update, env, CONFIG);
            if (newsResponse) {
                return newsResponse; // News Logic ‡∑Ä‡∑í‡∑É‡∑í‡∂±‡∑ä‡∂∏ response ‡∂ë‡∂ö ‡∂Ü‡∂¥‡∑É‡∑î ‡∂∫‡∑Ä‡∂±‡∑î ‡∂á‡∂≠.
            }
            
            // --- 3.2. Trading Bot Handler (AI Q&A, Owner Commands, Callback Queries) ---
            // news-logic ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä handle ‡∂±‡∑ú‡∂ö‡∑Ö commands ‡∑Ñ‡∑ù ‡∑É‡∂ª‡∂Ω text message/callback queries trading-logic ‡∑Ä‡∑ô‡∂≠ ‡∂∫‡∑Ä‡∂±‡∑î ‡∂Ω‡∑ê‡∂∂‡∑ö.
            return handleTradingWebhook(update, env, CONFIG);

        } catch (e) {
            console.error("Error processing fetch request:", e);
            // If the JSON parsing fails (e.g., image_986c67.png), return a descriptive error.
            return new Response(`Error processing webhook: ${e.message}`, { status: 200 });
        }
    }
};
